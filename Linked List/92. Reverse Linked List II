/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(m==n){
            return head;
        }
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode curr = head;
        ListNode prev = dummy;
        
        int count = 1;
        while(count<m){
            prev = curr;
            curr = curr.next;
            count++;
        }
        ListNode firstTail = prev;
        ListNode secondTail = curr;
        
        prev = curr;
        curr = curr.next;
        while(count<n){
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
            count++;
        }
        
        firstTail.next = prev;
        secondTail.next = curr;
        return dummy.next;
    }
}
